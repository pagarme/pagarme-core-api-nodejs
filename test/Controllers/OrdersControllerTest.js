/**
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.OrdersController;
const ListOrderResponse = testerlib.ListOrderResponse;
const GetOrderResponse = testerlib.GetOrderResponse;
const CreateOrderRequest = testerlib.CreateOrderRequest;
const GetOrderItemResponse = testerlib.GetOrderItemResponse;
const CreateOrderItemRequest = testerlib.CreateOrderItemRequest;
const UpdateMetadataRequest = testerlib.UpdateMetadataRequest;
const UpdateOrderItemRequest = testerlib.UpdateOrderItemRequest;
const UpdateOrderStatusRequest = testerlib.UpdateOrderStatusRequest;

describe("OrdersController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Gets all orders
     */
    it("should testTestGetOrders response", function testTestGetOrdersTest(done) {
        // parameters for the API call
        let page = null;
        let size = null;
        let code = null;
        let status = null;
        let createdSince = null;
        let createdUntil = null;
        let customerId = null;

        controller.getOrders(page, size, code, status, createdSince, createdUntil, customerId, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

});
